// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace PackageKit {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class CategoryObj : GLib.Opaque {

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_category_obj_copy(IntPtr raw);

		public PackageKit.CategoryObj Copy() {
			IntPtr raw_ret = pk_category_obj_copy(Handle);
			PackageKit.CategoryObj ret = raw_ret == IntPtr.Zero ? null : (PackageKit.CategoryObj) GLib.Opaque.GetOpaque (raw_ret, typeof (PackageKit.CategoryObj), true);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_category_obj_free(IntPtr raw);

		public bool Free() {
			bool raw_ret = pk_category_obj_free(Handle);
			bool ret = raw_ret;
			return ret;
		}

		public CategoryObj(IntPtr raw) : base(raw) {}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_category_obj_new();

		public CategoryObj () 
		{
			Raw = pk_category_obj_new();
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_category_obj_new_from_data(IntPtr parent_id, IntPtr cat_id, IntPtr name, IntPtr summary, IntPtr icon);

		public CategoryObj (string parent_id, string cat_id, string name, string summary, string icon) 
		{
			IntPtr native_parent_id = GLib.Marshaller.StringToPtrGStrdup (parent_id);
			IntPtr native_cat_id = GLib.Marshaller.StringToPtrGStrdup (cat_id);
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr native_summary = GLib.Marshaller.StringToPtrGStrdup (summary);
			IntPtr native_icon = GLib.Marshaller.StringToPtrGStrdup (icon);
			Raw = pk_category_obj_new_from_data(native_parent_id, native_cat_id, native_name, native_summary, native_icon);
			GLib.Marshaller.Free (native_parent_id);
			GLib.Marshaller.Free (native_cat_id);
			GLib.Marshaller.Free (native_name);
			GLib.Marshaller.Free (native_summary);
			GLib.Marshaller.Free (native_icon);
		}

#endregion
	}
}
