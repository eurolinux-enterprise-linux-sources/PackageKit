// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace PackageKit {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Group {

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_group_enum_to_text(int group);

		public static string EnumToText(PackageKit.GroupEnum group) {
			IntPtr raw_ret = pk_group_enum_to_text((int) group);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern ulong pk_group_bitfield_from_text(IntPtr groups);

		public static ulong BitfieldFromText(string groups) {
			IntPtr native_groups = GLib.Marshaller.StringToPtrGStrdup (groups);
			ulong raw_ret = pk_group_bitfield_from_text(native_groups);
			ulong ret = raw_ret;
			GLib.Marshaller.Free (native_groups);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern int pk_group_enum_from_text(IntPtr group);

		public static PackageKit.GroupEnum EnumFromText(string group) {
			IntPtr native_group = GLib.Marshaller.StringToPtrGStrdup (group);
			int raw_ret = pk_group_enum_from_text(native_group);
			PackageKit.GroupEnum ret = (PackageKit.GroupEnum) raw_ret;
			GLib.Marshaller.Free (native_group);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_group_bitfield_to_text(ulong groups);

		public static string BitfieldToText(ulong groups) {
			IntPtr raw_ret = pk_group_bitfield_to_text(groups);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			return ret;
		}

#endregion
	}
}
