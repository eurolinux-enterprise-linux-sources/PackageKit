// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace PackageKit {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class TransactionObj : GLib.Opaque {

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_transaction_obj_copy(IntPtr raw);

		public PackageKit.TransactionObj Copy() {
			IntPtr raw_ret = pk_transaction_obj_copy(Handle);
			PackageKit.TransactionObj ret = raw_ret == IntPtr.Zero ? null : (PackageKit.TransactionObj) GLib.Opaque.GetOpaque (raw_ret, typeof (PackageKit.TransactionObj), true);
			return ret;
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_transaction_obj_free(IntPtr raw);

		public bool Free() {
			bool raw_ret = pk_transaction_obj_free(Handle);
			bool ret = raw_ret;
			return ret;
		}

		public TransactionObj(IntPtr raw) : base(raw) {}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_transaction_obj_new();

		public TransactionObj () 
		{
			Raw = pk_transaction_obj_new();
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_transaction_obj_new_from_data(IntPtr tid, IntPtr timespec, bool succeeded, int role, uint duration, IntPtr data, uint uid, IntPtr cmdline);

		public TransactionObj (string tid, string timespec, bool succeeded, PackageKit.RoleEnum role, uint duration, string data, uint uid, string cmdline) 
		{
			IntPtr native_tid = GLib.Marshaller.StringToPtrGStrdup (tid);
			IntPtr native_timespec = GLib.Marshaller.StringToPtrGStrdup (timespec);
			IntPtr native_data = GLib.Marshaller.StringToPtrGStrdup (data);
			IntPtr native_cmdline = GLib.Marshaller.StringToPtrGStrdup (cmdline);
			Raw = pk_transaction_obj_new_from_data(native_tid, native_timespec, succeeded, (int) role, duration, native_data, uid, native_cmdline);
			GLib.Marshaller.Free (native_tid);
			GLib.Marshaller.Free (native_timespec);
			GLib.Marshaller.Free (native_data);
			GLib.Marshaller.Free (native_cmdline);
		}

#endregion
	}
}
