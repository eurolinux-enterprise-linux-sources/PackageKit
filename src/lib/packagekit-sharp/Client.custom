/*
 * Client.custom: customization code for Client.cs
 *
 * Author(s):
 *	Stephane Delcroix  (stephane@delcroix.org)
 *
 * Copyright (c) 2009 Novell, Inc.
 *
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

		[DllImport("libpackagekit-glib.dll")]
		static extern unsafe bool pk_client_set_tid(IntPtr raw, IntPtr tid, out IntPtr error);

		[DllImport("libpackagekit-glib.dll")]
		static extern IntPtr pk_client_get_tid(IntPtr raw);

		public string Tid {
			get {
				IntPtr raw_ret = pk_client_get_tid(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
			set {
				IntPtr native_tid = GLib.Marshaller.StringToPtrGStrdup (value);
				IntPtr error = IntPtr.Zero;
				pk_client_set_tid(Handle, native_tid, out error);
				GLib.Marshaller.Free (native_tid);
				if (error != IntPtr.Zero) throw new GLib.GException (error);
			}
		}

		[DllImport("libpackagekit-glib.dll")]
		static extern unsafe bool pk_client_set_use_buffer(IntPtr raw, bool use_buffer, out IntPtr error);

		[DllImport("libpackagekit-glib.dll")]
		static extern bool pk_client_get_use_buffer(IntPtr raw);

		public bool UseBuffer {
			get {
				bool raw_ret = pk_client_get_use_buffer(Handle);
				bool ret = raw_ret;
				return ret;
			}
			set {
				IntPtr error = IntPtr.Zero;
				pk_client_set_use_buffer(Handle, value, out error);
				if (error != IntPtr.Zero) throw new GLib.GException (error);
			}
		}




